#!/usr/bin/perl

#
# NethServer Samba
#
# Initialize builtin accounts in SAM database. Requires winbindd running.
#
#
# Copyright (C) 2012 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
# 
# This script is part of NethServer.
# 
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
# 
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#

use strict;

use esmith::AccountsDB;
use User::pwent;
use NethServer::Samba;

my $exitCode = 0;

my $luseradd = '/usr/sbin/luseradd';
my $lgroupmod = '/usr/sbin/lgroupmod';
my $net = '/usr/bin/net';
my $accountsDb = esmith::AccountsDB->open() or die("Could not open AccountsDB");
my $prefix = NethServer::Samba->new()->get_local_name();

my $entries = {
    domadmins => {
	rid => 512,
	type => 'd',
	name => 'Domain Admins',
	comment => 'Designated administrators of the domain'
    },
    locals => {
	rid => 513,
	type => 'd',
	name => 'Domain Users',
	comment => 'Default group for domain accounts'
    },
    domguests => {
	rid => 514,
	type => 'd',
	name => 'Domain Guests',
	comment => 'Domain group for the builtin guest account'
    },
    domcomputers => {
	rid => 515,
	type => 'd',
	name => 'Domain Computers',
	comment => 'Computers that joined the domain'
    }	
};

sub initializeGroupRecord
{
    my $groupName = shift;
    my $description = shift;

    # note that $group is a user account passwd entry:
    my $pwent = getpwnam($groupName);

    if( ! $pwent) {
	warn "Could not find system group $groupName";
	return 0;  # failure;
    }

    my $groupRecord = $accountsDb->get($groupName);

    # Nothing to to if the record does not exists, or is already initialized.
    if( ! $groupRecord || $groupRecord->prop('Uid') || $groupRecord->prop('Gid')) {
	return 1; # success -- nothing to do.
    }

    # This is a strict check:
    if( $groupRecord->prop('type') ne 'group') {
	warn "The `$groupName` account is not of type group";
	return 0; # error
    }
    
    # Initialize the group record:
    $groupRecord->merge_props(
	'Gid' => $pwent->gid, 
	'Uid' => $pwent->uid, 
	'Description' => $description,
	'Removable' => 'no'
	);

    return 1; # success
}

#
# Domain Users NT group is mapped to "locals". Refs #2792
#
if(getpwnam('domusers')) {
    warn "[WARNING] removing obsolete user/group domusers..\n";
    system(qw(/usr/sbin/luserdel domusers));
}

while ( my ($group, $entry) = each(%$entries) ) {
    
    if( ! getgrnam($group)) {

	# Create a system user and private group entry:
	qx($luseradd -d /var/lib/nethserver/home/$group -M -s /bin/false $group);
	if($? != 0) {
	    warn "Failed to create system samba group `$group`";
	    $exitCode ++;
	    next;
	}

	if( ! initializeGroupRecord($group, $entry->{'name'})) {
	    $exitCode ++;
	}

    }

    #
    # Remap group if RID is not expected. Refs #2733
    #
    my $addMapping = 0;
    my $sidOutput = `$net sam show "$prefix\\$group" 2>/dev/null`;
    if($? == 0 && $sidOutput !~ m/-\Q$entry->{'rid'}\E$/) {
	system($net, 'groupmap', 'delete', 'ntgroup=' . $group);
	$addMapping = 1;
    } elsif($? != 0) {
	$addMapping = 1;
    }

    if($addMapping) {
	# Map the created unix group to the given $entry
	system($net, 'groupmap', 'add', 
	       "unixgroup=" . $group, 
	       "ntgroup=" . $entry->{'name'}, 
	       "rid=" . $entry->{'rid'},
	       "type=" . $entry->{'type'},
	       "comment=" . $entry->{'comment'}
	    );

	if($? != 0) {
	    warn "Failed to map unix group `$group` to samba rid " . $entry->{'rid'};
	    $exitCode ++;
	    next;
	}	
    }

}

#
# Refs #1588 -- add privileges to domadmins group
#
system(join(' ', $net, qw(sam rights grant domadmins
    SeMachineAccountPrivilege
), ">/dev/null"));
if($? != 0) {
    warn "Failed to add privileges to domadmins group";
    $exitCode ++;
}


exit($exitCode == 0 ? 0 : 1);
