#!/usr/bin/perl

#
# Copyright (C) 2014 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see .
#

#
# This action clears any previously allocated domain SID and machine
# password when role is set to PDC.  Thus, if role is switched again
# to ADS, a JOIN is forced.  
#

use strict;

use esmith::ConfigDB;
use NethServer::Samba;
use NethServer::Directory;

my $event = shift;
my $ldap = NethServer::Directory->new();
my $samba = NethServer::Samba->new();

my $role = $samba->{ServerRole};
my $workgroup = $samba->get_workgroup_name();

if($role eq 'WS' || $samba->get_local_name() eq $workgroup) {
    exit(0);
}

my $isSameSid = $samba->get_local_sid() eq sidFromLdap($ldap, $workgroup);

if($role eq 'PDC') {
    system('/usr/bin/tdbtool', '/var/lib/samba/private/secrets.tdb', 
	   'delete', 'SECRETS/MACHINE_PASSWORD/' . $workgroup);   
}

# Clear secrets.tdb and ldap if SID does not fit the new server role:
if(($isSameSid && $role eq 'ADS')
   || ( ! $isSameSid && $role eq 'PDC')) {
	system('/usr/bin/tdbtool', '/var/lib/samba/private/secrets.tdb', 
	       'delete', 'SECRETS/SID/' . $workgroup);
	$ldap->delete(sprintf("sambaDomainName=%s,%s", $workgroup, NethServer::Directory::getInternalSuffix()));
}

system(qw(/usr/bin/net cache flush));

exit(0);

#
# Helpers
#

sub sidFromLdap
{
    my $ldap = shift;
    my $workgroup = shift;

    my $entry = $ldap->search(
	base => NethServer::Directory::getInternalSuffix(),
	filter => 'sambaDomainName=' . $workgroup
	)->pop_entry();

    if( ! defined $entry) {
	return '';
    }

    return $entry->get_value('sambaSID') || '';
}
